{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBko6PIeSKFeBb7_CS6IldxOnwIOGylnsg\",\n  authDomain: \"p-17-clothing-f1bd3.firebaseapp.com\",\n  projectId: \"p-17-clothing-f1bd3\",\n  storageBucket: \"p-17-clothing-f1bd3.appspot.com\",\n  messagingSenderId: \"196269423235\",\n  appId: \"1:196269423235:web:8861ddd4576ace934179b6\",\n  measurementId: \"G-ZRFZZ07394\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = fireStore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newCocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/piyush/Desktop/p17-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","fireStore","collection","batch","forEach","obj","newCocRef","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AAEA,OAAO,oBAAP;AAEA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,qCAFD;AAGXC,EAAAA,SAAS,EAAE,qBAHA;AAIXC,EAAAA,aAAa,EAAE,iCAJJ;AAKXC,EAAAA,iBAAiB,EAAE,cALR;AAMXC,EAAAA,KAAK,EAAE,2CANI;AAOXC,EAAAA,aAAa,EAAE;AAPJ,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAqB;AACjB,UAAM;AAAEC,MAAAA,WAAF;AAAcC,MAAAA;AAAd,QAAwBV,QAA9B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAHc;AAId,WAAGV;AAJW,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,KAAK,CAACG,OAAxC;AACH;AACJ;;AAED,SAAOf,OAAP;AAEH,CAzBM;AA2BP,OAAO,MAAMgB,yBAAyB,GAAG,OAAOC,aAAP,EAAsBC,YAAtB,KAAuC;AAC5E,QAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqBJ,aAArB,CAAtB;AAGA,QAAMK,KAAK,GAAGrB,SAAS,CAACqB,KAAV,EAAd;AACAJ,EAAAA,YAAY,CAACK,OAAb,CAAqBC,GAAG,IAAI;AACxB,UAAMC,SAAS,GAAGN,aAAa,CAACjB,GAAd,EAAlB;AACAoB,IAAAA,KAAK,CAACX,GAAN,CAAUe,SAAV,EAAoBF,GAApB;AACH,GAHD;AAKA,SAAO,MAAMF,KAAK,CAACK,MAAN,EAAb;AAEH,CAZM;AAcN,OAAO,MAAMC,+BAA+B,GAAIC,WAAD,IAAiB;AAC7D,QAAMC,qBAAqB,GAAGD,WAAW,CAACE,IAAZ,CAAiBC,GAAjB,CAAsB9B,GAAG,IAAI;AACvD,UAAM;AAAC+B,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAAgBhC,GAAG,CAACiC,IAAJ,EAAtB;AAEA,WAAO;AACHC,MAAAA,SAAS,EAAEC,SAAS,CAACJ,KAAK,CAACK,WAAN,EAAD,CADjB;AAEHC,MAAAA,EAAE,EAAErC,GAAG,CAACqC,EAFL;AAGHN,MAAAA,KAHG;AAIHC,MAAAA;AAJG,KAAP;AAMH,GAT6B,CAA9B;AAUH,CAXO;AAaR9C,QAAQ,CAACoD,aAAT,CAAuBnD,MAAvB;AAEA,OAAO,MAAMoD,IAAI,GAAGrD,QAAQ,CAACqD,IAAT,EAAb;AACP,OAAO,MAAMxC,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMyC,QAAQ,GAAG,IAAItD,QAAQ,CAACqD,IAAT,CAAcE,kBAAlB,EAAjB;AAEAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAetD,QAAf","sourcesContent":["import firebase from 'firebase/app';\n\nimport 'firebase/firestore';\n\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyBko6PIeSKFeBb7_CS6IldxOnwIOGylnsg\",\n    authDomain: \"p-17-clothing-f1bd3.firebaseapp.com\",\n    projectId: \"p-17-clothing-f1bd3\",\n    storageBucket: \"p-17-clothing-f1bd3.appspot.com\",\n    messagingSenderId: \"196269423235\",\n    appId: \"1:196269423235:web:8861ddd4576ace934179b6\",\n    measurementId: \"G-ZRFZZ07394\"\n  };\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if(!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\n\n    const snapShot = await userRef.get();\n\n    if(!snapShot.exists) {\n        const { displayName,email } = userAuth;\n        const createdAt = new Date()\n\n        try {\n          await userRef.set({\n              displayName,\n              email,\n              createdAt,\n              ...additionalData\n            })\n        } catch (error) {\n            console.log('error creating user',error.message)\n        }\n    }\n\n    return userRef;\n\n}\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n    const collectionRef = fireStore.collection(collectionKey);\n\n\n    const batch = firestore.batch();\n    objectsToAdd.forEach(obj => {\n        const newCocRef = collectionRef.doc();\n        batch.set(newDocRef,obj);\n    })\n\n    return await batch.commit();\n\n}\n\n export const convertCollectionsSnapshotToMap = (collections) => {\n    const transformedCollection = collections.docs.map( doc => {\n        const {title,items} = doc.data();\n\n        return {\n            routeName: encodeURI(title.toLowerCase()),\n            id: doc.id,\n            title,\n            items\n        }\n    })\n}\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nprovider.setCustomParameters({ prompt: 'select_account' })\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}